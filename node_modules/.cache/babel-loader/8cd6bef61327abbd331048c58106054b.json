{"ast":null,"code":"import addDays from \"../addDays/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name setDay\r\n * @category Weekday Helpers\r\n * @summary Set the day of the week to the given date.\r\n *\r\n * @description\r\n * Set the day of the week to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} day - the day of the week of the new date\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the new date with the day of the week set\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\r\n * var result = setDay(new Date(2014, 8, 1), 0)\r\n * //=> Sun Aug 31 2014 00:00:00\r\n *\r\n * @example\r\n * // Set week day to Sunday, with a weekStartsOn of Monday:\r\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff);\n}","map":{"version":3,"names":["addDays","toDate","toInteger","requiredArgs","setDay","dirtyDate","dirtyDay","dirtyOptions","arguments","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","day","currentDay","getDay","remainder","dayIndex","delta","diff"],"sources":["D:/pimtool/pimtoolfont/node_modules/date-fns/esm/setDay/index.js"],"sourcesContent":["import addDays from \"../addDays/index.js\";\r\nimport toDate from \"../toDate/index.js\";\r\nimport toInteger from \"../_lib/toInteger/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n\r\n/**\r\n * @name setDay\r\n * @category Weekday Helpers\r\n * @summary Set the day of the week to the given date.\r\n *\r\n * @description\r\n * Set the day of the week to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} day - the day of the week of the new date\r\n * @param {Object} [options] - an object with options.\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the new date with the day of the week set\r\n * @throws {TypeError} 2 arguments required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\r\n * var result = setDay(new Date(2014, 8, 1), 0)\r\n * //=> Sun Aug 31 2014 00:00:00\r\n *\r\n * @example\r\n * // Set week day to Sunday, with a weekStartsOn of Monday:\r\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\r\n * //=> Sun Sep 07 2014 00:00:00\r\n */\r\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\r\n  requiredArgs(2, arguments);\r\n  var options = dirtyOptions || {};\r\n  var locale = options.locale;\r\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\r\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\r\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\r\n\r\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\r\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\r\n  }\r\n\r\n  var date = toDate(dirtyDate);\r\n  var day = toInteger(dirtyDay);\r\n  var currentDay = date.getDay();\r\n  var remainder = day % 7;\r\n  var dayIndex = (remainder + 7) % 7;\r\n  var delta = 7 - weekStartsOn;\r\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\r\n  return addDays(date, diff);\r\n}"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,YAArC,EAAmD;EAChEJ,YAAY,CAAC,CAAD,EAAIK,SAAJ,CAAZ;EACA,IAAIC,OAAO,GAAGF,YAAY,IAAI,EAA9B;EACA,IAAIG,MAAM,GAAGD,OAAO,CAACC,MAArB;EACA,IAAIC,kBAAkB,GAAGD,MAAM,IAAIA,MAAM,CAACD,OAAjB,IAA4BC,MAAM,CAACD,OAAP,CAAeG,YAApE;EACA,IAAIC,mBAAmB,GAAGF,kBAAkB,IAAI,IAAtB,GAA6B,CAA7B,GAAiCT,SAAS,CAACS,kBAAD,CAApE;EACA,IAAIC,YAAY,GAAGH,OAAO,CAACG,YAAR,IAAwB,IAAxB,GAA+BC,mBAA/B,GAAqDX,SAAS,CAACO,OAAO,CAACG,YAAT,CAAjF,CANgE,CAMyC;;EAEzG,IAAI,EAAEA,YAAY,IAAI,CAAhB,IAAqBA,YAAY,IAAI,CAAvC,CAAJ,EAA+C;IAC7C,MAAM,IAAIE,UAAJ,CAAe,kDAAf,CAAN;EACD;;EAED,IAAIC,IAAI,GAAGd,MAAM,CAACI,SAAD,CAAjB;EACA,IAAIW,GAAG,GAAGd,SAAS,CAACI,QAAD,CAAnB;EACA,IAAIW,UAAU,GAAGF,IAAI,CAACG,MAAL,EAAjB;EACA,IAAIC,SAAS,GAAGH,GAAG,GAAG,CAAtB;EACA,IAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;EACA,IAAIE,KAAK,GAAG,IAAIT,YAAhB;EACA,IAAIU,IAAI,GAAGN,GAAG,GAAG,CAAN,IAAWA,GAAG,GAAG,CAAjB,GAAqBA,GAAG,GAAG,CAACC,UAAU,GAAGI,KAAd,IAAuB,CAAlD,GAAsD,CAACD,QAAQ,GAAGC,KAAZ,IAAqB,CAArB,GAAyB,CAACJ,UAAU,GAAGI,KAAd,IAAuB,CAAjH;EACA,OAAOrB,OAAO,CAACe,IAAD,EAAOO,IAAP,CAAd;AACD"},"metadata":{},"sourceType":"module"}